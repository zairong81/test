<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="web.dao.face.BoardDao">

	<resultMap type="web.dto.Board" id="Board">
		<id property="boardNo" column="board_no" />
		<result property="writerId" column="writer_id"/>
		<result property="writerNick" column="writer_nick"/>
		<result property="writeDate" column="write_date"/>	
	</resultMap>
	
	<resultMap type="web.dto.Filetest" id="Filetest">
		<result column="board_no" property="boardNo"/>
		<result column="origin_name" property="originName" />
		<result column="stored_name" property="storedName" />
	</resultMap>
	
	<sql id="selectBoard">
		SELECT
			board_no
			, title
			, writer_id
			, writer_nick
			, content
			, hit
			, write_date 
		FROM board 
	</sql>
	
	<sql id="selectRownum">
		SELECT
			rownum rnum, B.*
		FROM (
			<include refid="selectBoard" />
			ORDER BY board_no DESC
		) B
		ORDER BY rnum
	</sql>
	
	<select id="selectCntAll" parameterType="String"  resultType="int">
		SELECT count(*) FROM (
			<include refid="selectBoard" />
		) CNT
		<if test='search !=null'>
			WHERE title LIKE '%' || #{search } || '%'
		</if>
	</select>
	
	<select id="selectPageList" parameterType="web.util.Paging" resultMap="Board">
		SELECT * FROM (
			SELECT rownum rnum, B.*	FROM (
				<include refid="selectBoard" />
				<if test='search !=null'>
				WHERE title LIKE '%'|| #{search } ||'%'
				</if>
				ORDER BY board_no DESC
				)B
				ORDER BY rnum
			) R
		<where>
			rnum BETWEEN #{startNo } AND #{endNo }
		</where>
	</select>
	
	<update id="updateHit" parameterType="web.dto.Board">
		UPDATE board
		SET hit = hit + 1
		WHERE board_no = #{boardNo }
	</update>
	
	<select id="selectBoardByBoardNo" parameterType="web.dto.Board" resultMap="Board">
		SELECT
			board_no
			, title
			, writer_id
			, writer_nick
			, content
			, hit
			, write_date 
			, (SELECT count(*) FROM recommend R WHERE R.board_no=B.board_no) AS recommend
		FROM board B
		WHERE board_no = #{boardNo }
	</select>
	
	<select id="selectBoardNo" resultType="int">
		SELECT board_seq.nextval
		FROM dual
	</select>
	
	<insert id="write" parameterType="web.dto.Board">
		INSERT INTO board( board_no, title, writer_id, writer_nick, content)
		VALUES( #{boardNo}, #{title }, #{writerId }, ( SELECT nick FROM member WHERE id=#{writerId } ), #{content } )
	</insert>
	
	<update id="update" parameterType="web.dto.Board">
		UPDATE board
		SET title = #{title }, content = #{content }
		WHERE board_no = #{boardNo }
	</update>
	
	<update id="delete" parameterType="web.dto.Board">
		DELETE board
		WHERE board_no = #{boardNo }
	</update>
	
	<insert id="insertFile" parameterType="web.dto.Filetest">
		INSERT INTO filetest ( fileno, board_no, origin_name, stored_name )
		VALUES ( filetest_seq.nextval, #{boardNo }, #{originName }, #{storedName } )
	</insert>
	
	<delete id="deleteFile" parameterType="web.dto.Filetest">
		DELETE filetest
		WHERE board_no = #{boardNo }
	</delete>
	
	<select id="selectFile" parameterType="web.dto.Board" resultMap="Filetest">
		SELECT * FROM filetest
		WHERE board_no = #{boardNo }
	</select>
	
	<select id="selectByFileno" parameterType="int" resultMap="Filetest">
		SELECT fileno, origin_name, stored_name
		FROM filetest
		WHERE fileno = #{fileNo }
	</select>
	
	<delete id="deleteBoardFileList" parameterType="String">
		DELETE FROM filetest
		WHERE board_no IN ( ${names } )
	</delete>
	
	<delete id="deleteBoardList" parameterType="String">
		DELETE FROM board
		WHERE board_no IN ( ${names } )
	</delete>		

</mapper>